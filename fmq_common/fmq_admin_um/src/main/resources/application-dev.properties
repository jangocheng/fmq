#windows开发环境

server.port=8082
server.context-path=/

#关闭启动banner springboot的图标
spring.main.banner-mode=off

#logging 日志
logging.file=log.log
logging.level.root=WARN
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate=ERROR
logging.level.com.fmq.common=INFO
logging.level.org.springframework.cloud=WARN
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%thread]){faint} %clr(%-40.40logger{39}){cyan} %L %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}
#该属性置为 true 的时候，核心 Logger （包含嵌入式容器、hibernate、spring）会输出更多内容，但是你 自己应用的日志并不会输出为 DEBUG 级别
debug=true 

#在修改后更新库表的字段
#spring.jpa.hibernate.ddl-auto=update
#在控制台显示sql语句
spring.jpa.show-sql=true

#数据库地址多个地址以逗号隔开
mongodb.port=28017 
mongodb.host=192.168.1.108 
mongodb.name=test
#用户名
mongodb.user=
#密码
mongodb.password=
#是否开启鉴权
mongodb.authentification=false




#jackson时间格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss

server.session.timeout=10
server.tomcat.uri-encoding=UTF-8


#连接mysql  和 数据源 
#DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.1.108:3306/test
#?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=
spring.datasource.name=druid

spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM t_user
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=true
spring.datasource.druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.druid.useGlobalDataSourceStat=true

## Mybatis 配置
mybatis.typeAliasesPackage=com.fmq.common.dto
mybatis.mapperLocations=classpath:mapper/*.xml



## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=192.168.1.108
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=0


## Dubbo 消费提供者配置
#spring.dubbo.application.name=consumer
## Dubbo 服务提供者配置
#spring.dubbo.application.name=provider
#spring.dubbo.registry.address=zookeeper://192.168.1.108:2181
#spring.dubbo.protocol.name=dubbo
#spring.dubbo.protocol.port=20880
#spring.dubbo.scan=com.fmq.common